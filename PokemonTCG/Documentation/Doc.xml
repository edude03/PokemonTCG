<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PokemonTCG</name>
    </assembly>
    <members>
        <member name="T:PokemonTCG.SerializedFormat">
            <summary>
            Serialization format types.
            </summary>
        </member>
        <member name="F:PokemonTCG.SerializedFormat.Binary">
            <summary>
            Binary serialization format.
            </summary>
        </member>
        <member name="F:PokemonTCG.SerializedFormat.Document">
            <summary>
            Document serialization format.
            </summary>
        </member>
        <member name="T:PokemonTCG.ObjectXMLSerializer`1">
            <summary>
            Facade to XML serialization and deserialization of strongly typed objects to/from an XML file.
            
            References: XML Serialization at http://samples.gotdotnet.com/:
            http://samples.gotdotnet.com/QuickStart/howto/default.aspx?url=/quickstart/howto/doc/xmlserialization/rwobjfromxml.aspx
            </summary>
        </member>
        <member name="M:PokemonTCG.ObjectXMLSerializer`1.Load(System.String)">
            <summary>
            Loads an object from an XML file in Document format.
            </summary>
            <example>
            <code>
            serializableObject = ObjectXMLSerializer&lt;SerializableObject&gt;.Load(@'C:\XMLObjects.xml');
            </code>
            </example>
            <param name='path'>Path of the file to load the object from.</param>
            <returns>Object loaded from an XML file in Document format.</returns>
        </member>
        <member name="M:PokemonTCG.ObjectXMLSerializer`1.Load(System.String,PokemonTCG.SerializedFormat)">
            <summary>
            Loads an object from an XML file using a specified serialized format.
            </summary>
            <example>
            <code>
            serializableObject = ObjectXMLSerializer&lt;SerializableObject&gt;.Load(@'C:\XMLObjects.xml', SerializedFormat.Binary);
            </code>
            </example>		
            <param name='path'>Path of the file to load the object from.</param>
            <param name='serializedFormat'>XML serialized format used to load the object.</param>
            <returns>Object loaded from an XML file using the specified serialized format.</returns>
        </member>
        <member name="M:PokemonTCG.ObjectXMLSerializer`1.Load(System.String,System.Type[])">
            <summary>
            Loads an object from an XML file in Document format, supplying extra data types to enable deserialization of custom types within the object.
            </summary>
            <example>
            <code>
            serializableObject = ObjectXMLSerializer&lt;SerializableObject&gt;.Load(@'C:\XMLObjects.xml', new Type[] { typeof(MyCustomType) });
            </code>
            </example>
            <param name='path'>Path of the file to load the object from.</param>
            <param name='extraTypes'>Extra data types to enable deserialization of custom types within the object.</param>
            <returns>Object loaded from an XML file in Document format.</returns>
        </member>
        <member name="M:PokemonTCG.ObjectXMLSerializer`1.Load(System.String,System.IO.IsolatedStorage.IsolatedStorageFile)">
            <summary>
            Loads an object from an XML file in Document format, located in a specified isolated storage area.
            </summary>
            <example>
            <code>
            serializableObject = ObjectXMLSerializer&lt;SerializableObject&gt;.Load('XMLObjects.xml', IsolatedStorageFile.GetUserStoreForAssembly());
            </code>
            </example>
            <param name='fileName'>Name of the file in the isolated storage area to load the object from.</param>
            <param name='isolatedStorageDirectory'>Isolated storage area directory containing the XML file to load the object from.</param>
            <returns>Object loaded from an XML file in Document format located in a specified isolated storage area.</returns>
        </member>
        <member name="M:PokemonTCG.ObjectXMLSerializer`1.Load(System.String,System.IO.IsolatedStorage.IsolatedStorageFile,PokemonTCG.SerializedFormat)">
            <summary>
            Loads an object from an XML file located in a specified isolated storage area, using a specified serialized format.
            </summary>
            <example>
            <code>
            serializableObject = ObjectXMLSerializer&lt;SerializableObject&gt;.Load('XMLObjects.xml', IsolatedStorageFile.GetUserStoreForAssembly(), SerializedFormat.Binary);
            </code>
            </example>		
            <param name='fileName'>Name of the file in the isolated storage area to load the object from.</param>
            <param name='isolatedStorageDirectory'>Isolated storage area directory containing the XML file to load the object from.</param>
            <param name='serializedFormat'>XML serialized format used to load the object.</param>        
            <returns>Object loaded from an XML file located in a specified isolated storage area, using a specified serialized format.</returns>
        </member>
        <member name="M:PokemonTCG.ObjectXMLSerializer`1.Load(System.String,System.IO.IsolatedStorage.IsolatedStorageFile,System.Type[])">
            <summary>
            Loads an object from an XML file in Document format, located in a specified isolated storage area, and supplying extra data types to enable deserialization of custom types within the object.
            </summary>
            <example>
            <code>
            serializableObject = ObjectXMLSerializer&lt;SerializableObject&gt;.Load('XMLObjects.xml', IsolatedStorageFile.GetUserStoreForAssembly(), new Type[] { typeof(MyCustomType) });
            </code>
            </example>		
            <param name='fileName'>Name of the file in the isolated storage area to load the object from.</param>
            <param name='isolatedStorageDirectory'>Isolated storage area directory containing the XML file to load the object from.</param>
            <param name='extraTypes'>Extra data types to enable deserialization of custom types within the object.</param>
            <returns>Object loaded from an XML file located in a specified isolated storage area, using a specified serialized format.</returns>
        </member>
        <member name="M:PokemonTCG.ObjectXMLSerializer`1.Save(`0,System.String)">
            <summary>
            Saves an object to an XML file in Document format.
            </summary>
            <example>
            <code>        
            SerializableObject serializableObject = new SerializableObject();
            
            ObjectXMLSerializer&lt;SerializableObject&gt;.Save(serializableObject, @'C:\XMLObjects.xml');
            </code>
            </example>
            <param name='serializableObject'>Serializable object to be saved to file.</param>
            <param name='path'>Path of the file to save the object to.</param>
        </member>
        <member name="M:PokemonTCG.ObjectXMLSerializer`1.Save(`0,System.String,PokemonTCG.SerializedFormat)">
            <summary>
            Saves an object to an XML file using a specified serialized format.
            </summary>
            <example>
            <code>
            SerializableObject serializableObject = new SerializableObject();
            
            ObjectXMLSerializer&lt;SerializableObject&gt;.Save(serializableObject, @'C:\XMLObjects.xml', SerializedFormat.Binary);
            </code>
            </example>
            <param name='serializableObject'>Serializable object to be saved to file.</param>
            <param name='path'>Path of the file to save the object to.</param>
            <param name='serializedFormat'>XML serialized format used to save the object.</param>
        </member>
        <member name="M:PokemonTCG.ObjectXMLSerializer`1.Save(`0,System.String,System.Type[])">
            <summary>
            Saves an object to an XML file in Document format, supplying extra data types to enable serialization of custom types within the object.
            </summary>
            <example>
            <code>        
            SerializableObject serializableObject = new SerializableObject();
            
            ObjectXMLSerializer&lt;SerializableObject&gt;.Save(serializableObject, @'C:\XMLObjects.xml', new Type[] { typeof(MyCustomType) });
            </code>
            </example>
            <param name='serializableObject'>Serializable object to be saved to file.</param>
            <param name='path'>Path of the file to save the object to.</param>
            <param name='extraTypes'>Extra data types to enable serialization of custom types within the object.</param>
        </member>
        <member name="M:PokemonTCG.ObjectXMLSerializer`1.Save(`0,System.String,System.IO.IsolatedStorage.IsolatedStorageFile)">
            <summary>
            Saves an object to an XML file in Document format, located in a specified isolated storage area.
            </summary>
            <example>
            <code>        
            SerializableObject serializableObject = new SerializableObject();
            
            ObjectXMLSerializer&lt;SerializableObject&gt;.Save(serializableObject, 'XMLObjects.xml', IsolatedStorageFile.GetUserStoreForAssembly());
            </code>
            </example>
            <param name='serializableObject'>Serializable object to be saved to file.</param>
            <param name='fileName'>Name of the file in the isolated storage area to save the object to.</param>
            <param name='isolatedStorageDirectory'>Isolated storage area directory containing the XML file to save the object to.</param>
        </member>
        <member name="M:PokemonTCG.ObjectXMLSerializer`1.Save(`0,System.String,System.IO.IsolatedStorage.IsolatedStorageFile,PokemonTCG.SerializedFormat)">
            <summary>
            Saves an object to an XML file located in a specified isolated storage area, using a specified serialized format.
            </summary>
            <example>
            <code>        
            SerializableObject serializableObject = new SerializableObject();
            
            ObjectXMLSerializer&lt;SerializableObject&gt;.Save(serializableObject, 'XMLObjects.xml', IsolatedStorageFile.GetUserStoreForAssembly(), SerializedFormat.Binary);
            </code>
            </example>
            <param name='serializableObject'>Serializable object to be saved to file.</param>
            <param name='fileName'>Name of the file in the isolated storage area to save the object to.</param>
            <param name='isolatedStorageDirectory'>Isolated storage area directory containing the XML file to save the object to.</param>
            <param name='serializedFormat'>XML serialized format used to save the object.</param>        
        </member>
        <member name="M:PokemonTCG.ObjectXMLSerializer`1.Save(`0,System.String,System.IO.IsolatedStorage.IsolatedStorageFile,System.Type[])">
            <summary>
            Saves an object to an XML file in Document format, located in a specified isolated storage area, and supplying extra data types to enable serialization of custom types within the object.
            </summary>
            <example>
            <code>
            SerializableObject serializableObject = new SerializableObject();
            
            ObjectXMLSerializer&lt;SerializableObject&gt;.Save(serializableObject, 'XMLObjects.xml', IsolatedStorageFile.GetUserStoreForAssembly(), new Type[] { typeof(MyCustomType) });
            </code>
            </example>		
            <param name='serializableObject'>Serializable object to be saved to file.</param>
            <param name='fileName'>Name of the file in the isolated storage area to save the object to.</param>
            <param name='isolatedStorageDirectory'>Isolated storage area directory containing the XML file to save the object to.</param>
            <param name='extraTypes'>Extra data types to enable serialization of custom types within the object.</param>
        </member>
        <member name="F:PokemonTCG.Deck.Size">
            <summary>
            Number of items in the deck
            </summary>
        </member>
        <member name="M:PokemonTCG.Deck.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="deckpath">Path to the decks folder</param>
            <param name="deckname">Name of the file to use</param>
            <remarks>The combination of deckpath and deckname is used to open the file</remarks>
        </member>
        <member name="M:PokemonTCG.Deck.Shuffle">
            <summary>
            Overloaded Shuffle Method. Shuffles the deck when called without parameters
            </summary>
        </member>
        <member name="M:PokemonTCG.Deck.Shuffle(PokemonTCG.Card[])">
            <summary>
            Overloaded Shuffle Method. Shuffle the source list when called. 
            </summary>
            <param name="deck"></param>
        </member>
        <member name="F:PokemonTCG.Player.Hand">
            Card arrays, write encapsulated methods for possibly
        </member>
        <member name="M:PokemonTCG.Player.#ctor(System.String)">
            <summary>
            Creates a new "player", sets the name, Loads the players deck
            Shuffles it 7 times, and adds 7 cards to it
            </summary>
            <param name="name">The Name of the player</param>
        </member>
        <member name="M:PokemonTCG.Player.draw(System.Int32)">
            <summary>
            Takes the top card from the deck and passes it to the calling method.
            </summary>
        </member>
        <member name="M:PokemonTCG.Player.draw">
            <summary>
            Calls the deck 
            </summary>
            <returns></returns>
        </member>
        <member name="M:PokemonTCG.Player.getLastCard">
            <summary>
            Returns the last card that was added to the List so that information 
            may be extracted from it
            </summary>
            <returns>The last card drawn</returns>
        </member>
        <member name="M:PokemonTCG.Player.discard">
            <summary>
            Puts the card that was passed in into the discarded array.
            </summary>
        </member>
        <member name="M:PokemonTCG.Player.DiscardHand">
            <summary>
            Removes all cards from the hand List
            </summary>
        </member>
        <member name="M:PokemonTCG.Player.getName">
            <summary>
            Ecapsulated method
            </summary>
            <returns>The players name</returns>
        </member>
        <member name="M:PokemonTCG.Player.chooseCard">
            <summary>
            Allows the user to choose a card from the hand List
            </summary>
            <returns>The choosen Card</returns>
        </member>
        <member name="M:PokemonTCG.Player.chooseCard(System.Collections.Generic.List{PokemonTCG.Card})">
            <summary>
            Presents a menu with the availible cards in the source list
            </summary>
            <param name="source">A List</param>
            <returns>A card</returns>
        </member>
        <member name="M:PokemonTCG.Player.chooseCard(System.Int32)">
            <summary>
            Check if the card the calling method wants is valid,
            if it is, the card is removed from the source list and
            returned
            </summary>
            <param name="index">The index of the card in question</param>
            <returns>The chosen card or null if there is an error</returns>
        </member>
        <member name="M:PokemonTCG.Card.#ctor(System.Int32)">
            <summary>
            The Constructor for Card,
            </summary>
            <param name="BOGUS_ID">Bogus_ID is the ID value associated with a card in the database</param>
        </member>
        <member name="M:PokemonTCG.Attack.find(PokemonTCG.Pair,System.Collections.Generic.List{PokemonTCG.Card})">
            <summary>
            Find the Card of type and value listed in the pair P
            </summary>
            <param name="p">A Value,Type Pair</param>
            <param name="attached">A list of cards</param>
            <returns>Boolean based on wheter or not the card was found</returns>
        </member>
    </members>
</doc>
